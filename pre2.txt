spell_doctor(self)
- for each text in links
	- ' . ' is replaced with '. '; similarly ' ? ',' , ',' ! '
	- text is converted to list of string using split by whitespaces
	- punc such as '!','?','.' if found in each word in above list is remembered by punc dictionary.example if text[i]='abc.',punc[i]='.'
	*- if text[i]='abc.def!ghi?jkl' then punc[i]='!' **no space- not taken care**
	- preference order for punc '!'>>'?'>>'.'
	*- list of 3 grams are generated by deleting punctuation(,?.!) at end of each word (also in middle if existed) in middle and joined by ' '
	- these 3 grams are queried in bing
	- if there are no 3grams then final string is not extended(not appended) otherwise the first two words are extended to final string initially from suggestions
	- further, if 'w11 w21 w31', 'w22 w32 w42' and 'w33 w43 w53' are suggestions at any point then preference of appending w3 position to final string is w31[if w31!=w3]>>w32[if w32!=w3]>>w33[if w33!=w3]>>w3
	- punc which is remembered from before is now added back after corresponding words and joined
	- punc is empytied and mapped to new index from combined string again
	- join(lambda function) changes 'abc.|?|! a' to'abc; A'
	- from punc dictionary ';'s are changed back to corresponding punctuation
	*- tweet_id,translated text is appended to final
	- prints counter after every appending
- main()
	- sql query to fetch all queries from pre1 table where tweet id is not in pre2
	- rows are taken in batches of 500 and spell_doctor function is called and modified tweet_id and tweet_text is inserted to pre2 table in sql database. 'batch inserted' will be printed after after insertion

